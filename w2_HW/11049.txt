11049번: 행렬 곱셈 순서

1.
N×M인 행렬 A와 M×K인 B를 곱할 때 필요한 곱셈 연산의 수는 총 N×M×K번.
행렬 N개를 곱하는데 필요한 곱셈 연산의 수는 행렬을 곱하는 순서에 따라 달라진다.
모든 행렬을 곱하는데 필요한 곱셈 연산 횟수의 최솟값을 출력.

2.
arr1(NxM), arr2(MxK) -> 총 횟수 : NxK == arr1(N)xarr2(M)xarr2(K)
arr1xarr2 = arr1과 arr2 행렬의 곱셈 값 + arr1의 최솟값 + arr2의 최솟값
d[s][e] = min(min, arr[s][0]*arr[s+1...e+1][0]*arr[e][1] + Dp(s,i) + Dp(i+1,e))

3.
s == e 이면 return 0;
d[s][e]!=0 이면 return d[s][e];

LOOP(i, s..e-1):
    value = arr[s][0] * arr[i+1][0] * arr[e][1] +Dp(s,i)+ Dp(i+1,e);
	min = Math.min(min,value);
		
return min;
