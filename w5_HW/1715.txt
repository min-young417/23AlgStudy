1715번 : 카드 정렬하기

1.
정렬된 두 묶음의 숫자 카드. 각 묶음의 카드의 수를 A, B.
보통 두 묶음을 합쳐서 하나로 만드는 데에는 A+B 번의 비교.
여러 묶음중 두 묶음씩 골라 서로 합쳐나간다면, 
고르는 순서에 따라서 비교 횟수가 매우 달라진다.
최소한 몇 번의 비교가 필요한가?

2.
A + B를 하고 비교 횟수에 추가.
다시 배열에 넣어서 묶음을 다시 더할 수 있게함.
우선순위 큐를 사용해서 합한 값이 무조건 기존 값보다 크지 않다는 문제 해결.

3.
PriorityQueue<Integer> q

LOOP:
    q.add(input)

LOOP(q가 한개만 남기 전까지):
    frist = q.remove()
    second = q.remove()
    count += first + second
    q.add(first+second)

print(count)