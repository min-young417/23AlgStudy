14502번: 연구소

1.
연구소 크기 N×M. 
바이러스는 상하좌우로 인접한 빈 칸으로 모두 퍼져나갈 수 있다.
새로 세울 수 있는 벽의 개수는 3개이며, 꼭 3개를 세워야 한다.
0은 빈 칸, 1은 벽, 2는 바이러스가 있는 곳.
연구소의 지도가 주어졌을 때 얻을 수 있는 안전 영역 크기의 최댓값을 구하는 프로그램.

2.
벽을 세울 수 있는 곳에 세워보기.
벽이 3개가 되면, 바이러스 퍼트리고 safezone 확인.
copyMap만들어서 바이러스 퍼트려보기, BFS.
그 중에 safezone의 크기가 가장 큰 값 출력.

3.
lab = new int[n][m]
lab에 데이터 입력

DFS(0)

print(safezone)

DFS(int wallCnt):
    벽 3개가 설치가 완료되었으면, BFS(), 리턴

    LOOP(i, j : n, m):
        lab[i][j]이 0이면, 1로 변경, DFS(설치된 벽+=1), 0으로 변경

BFS():
    Queue q

    LOOP(i, j : n, m):
        lab[i][j] 가 2이면, q.add(new Node(i, j))
    
    copyMap에 lab 복사

    LOOP:
        now, x = now.x, y = now.y
        LOOP(k : 4):
            nx = x + dx[k]
            ny = y + dy[k]

            copyMap[nx][ny]가 0dlaus, q에 추가, 값을 2로
    
    safezone() 확인

safezone():
    LOOP(n, m : i, j):
        copyMap[i][j]가 0이면 safe++
    
    maxSafeZone < safe 이면, maxSafeZone = safe