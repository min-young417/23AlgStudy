1707번: 이분 그래프

1.
그래프가 입력으로 주어졌을 때, 이 그래프가 이분 그래프인지 아닌지 판별하는 프로그램.
테스트 케이스의 개수 K. 테스트 케이스의 개수 K. 
각 줄에 인접한 두 정점의 번호 u, v (u ≠ v).
주어진 그래프가 이분 그래프이면 YES, 아니면 NO를 순서대로 출력.

2.
0 = 방문하지 않음. 1 = 색1. 2 = 색2.
방문하지 않은 노드면, q에 노드 추가, 색1로 시작. 
다른 노드들을 방문하면서,
방문하지 않은 노드로 간다면, q에 추가
같은 색의 노드로 간다면, 이분 그래프 아니다
현재 색1이고 방문하지 않은 노드이면, 다음은 색2이다.
그렇지 않고 색2이고 방문하지 않은 노드이면, 다음은 색1이다.
모든 노드를 다 돌았는데 반려되지 않았다면 이분 그래프 이다.

3.
LOOP(t):
    v, e
    arr = new ArrayList[v+1]
    visit = new int[v+1]

    LOOP(i : v):
        arr[i] = new ArrayList<Integer>();
    
    LOOP(i : e):
        p1, p2
        arr[p1].add(p2)
        arr[p2].add(p1)

    isGraph()

isGraph:
    queue q

    LOOP(i : 1~v):
        방문하지 않은 노드면, q에 노드 추가, 방문 체크 
        
        LOOP:
            now = q.poll()
            LOOP:
                방문하지 않은 노드로 간다면, q에 추가
                같은 색의 노드로 간다면, 이분 그래프 아니다

                현재 색1이고 방문하지 않은 노드이면, 다음은 색2이다.
                그렇지 않고 색2이고 방문하지 않은 노드이면, 다음은 색1이다.    
    
    해당되는 것이 없다면 이분 그래프이다.
