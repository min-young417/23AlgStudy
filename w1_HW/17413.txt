17413번: 단어 뒤집기 2

1.
문자열S의 단어만 뒤집는다.
1_문자열은 알파벳 소문자, 숫자, 공백, 특수 문자 만으로 구성.
2_문자열의 시작과 끝은 공백이 아님.
3_'<'와 '>'는 번갈아가면서 등장, '<'이 먼저 등장한다. 두 문자의 개수는 같다.
4_태그는 '<'로 시작해서 '>'로 끝나는 길이가 3 이상인 부분 문자열이다.
태그는 단어가 아니며, 태그와 단어 사이에 공백은 없다.

2.
문자열S의 문자 하나씩 확인.
문자열을 스택에 넣는다.
공백을 만나면, 스택에 저장된 문자를 출력한다.+공백 출력.
'<'를 만나면, 스택에 저장된 문자를 출력한다.+'<' 출력.+이후는 태그임을 표시.
태그 안에 있는 문자라면, 그대로 출력한다.
'>'를 만나면, 이후는 태그가 아님을 표시.+'>' 출력.

3.
String S = 입력 문자열 
stack 생성.

for(S.length){
    if(S.charAt == '<'){
        이후는 태그임.
        스택 내용을 pop으로 출력.
        print('<')
    }else if(S.charAt == '>'){
        이후는 태그 아님.
        print('>')
    }else if(태그라면){
        print(S.charAt)
    }else if(태그가 아니라면){
        if(S.charAt == ' '){
            스택 내용을 pop으로 출력.
        }else{
            stack.push(S.charAt)
        }
    }
}
스택에 저장된 마지막 단어를 pop으로 출력. 
+) ' '와 '<'를 기준으로 단어를 판별했기 때문에 마지막 단어를 출력하기 위해 필요함. 