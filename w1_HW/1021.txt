1021번: 회전하는 큐

1.
N개의 원소를 가진 양방향 순환 큐에서 몇개의 원소를 뽑아내려고 함.
-수행 가능한 연산-
1. 첫번째 원소를 뽑아낸다.
2. 왼쪽으로 한 칸 이동시킨다.
3. 오른쪽으로 한 칸 이동시킨다.
입력으로는 첫줄에 원소 개수 N, 뽑아낼 원소 개수 M, 두번째 줄엔 뽑아낼 원소의 위치가 있다.
출력은 해당 원소를 주어진 순서로 뽑아내는데 드는 2, 3번 연산의 최솟값이다.

2.
링크드리스트에 원소를 저장한다.
찾는 원소가 전체의 반보다 앞이면 그 앞의 모든 원소를 뒤로보내는 연산을 하고 count를 증가.
찾는 원소가 전체의 반보다 뒤이면 자신을 포함한 뒤의 모든 원소를 앞으로 보내는 연산을 하고 count 증가. 
누적 count 출력.

3.
링크드 리스트로 덱을 만든다.
count = 0; //연산 횟수를 누적한다.

N = 전체 원소 개수
M = 뽑아낼 원소 개수

1~N을 덱에 저장한다.
idx[]에 뽑을 원소(원소의 위치)를 받는다. 

for(M){
    target_idx = 뽑을 원소가 덱의 어디에 위치하는지 찾는다.
    half_idx = 덱의 절반 지점이 어디인지 찾는다.

    if(target_idx >= half_idx){
        2번 연산을 수행한다.(idx보다 앞에 있는 모든 원소를 뒤로 보낸다.)
        count++;
    }else{ 
        3번 연산을 수행한다.(idx와 idx보다 뒤에 있는 모든 원소를 앞으로 보낸다.)
        count++;
    }
}

print(count);